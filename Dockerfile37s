# Use an official Python runtime as a parent image
FROM python:3.7 as base

# Update and install necessary packages
RUN apt-get update && apt-get install -y supervisor wget nano git g++ && rm -rf /var/lib/apt/lists/*



FROM base as antispoofing
WORKDIR /app
RUN git clone https://github.com/TzurV/SSL_Anti-spoofing.git
COPY model/xlsr2_300m.pt /app/SSL_Anti-spoofing/xlsr2_300m.pt
COPY model/Best_LA_model_for_DF.pth /app/SSL_Anti-spoofing


FROM base as runner
WORKDIR /app
COPY --from=antispoofing /app/SSL_Anti-spoofing SSL_Anti-spoofing
COPY pyproject.toml poetry.lock ./


ENV POETRY_VERSION=1.4.2
ENV POETRY_HOME=/opt/poetry
ENV POETRY_CACHE_DIR=/opt/.cache

RUN pip install poetry==${POETRY_VERSION}
RUN poetry check
RUN poetry config virtualenvs.create false
RUN poetry install --without=dev --no-root

RUN pip install torch==1.8.1 torchvision==0.9.1 torchaudio==0.8.1 pandas matplotlib
RUN pip install /app/SSL_Anti-spoofing/fairseq-a54021305d6b3c4c5959ac9395135f63202db8f1/
RUN pip install tensorboard tensorboardX librosa==0.9.1 webrtcvad


COPY app app
COPY docker-entrypoint.sh .

# un-comment the following lines to avoid running as root (creates a new user: 'docker')
#RUN adduser --system --no-create-home docker
#USER docker

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PATH="/opt/app/.venv/bin:$PATH"
ENV VERSION=$VERSION


ENTRYPOINT ["/bin/bash", "/app/docker-entrypoint.sh"]
